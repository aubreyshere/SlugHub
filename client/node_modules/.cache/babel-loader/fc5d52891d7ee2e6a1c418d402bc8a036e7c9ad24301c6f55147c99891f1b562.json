{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aubre\\\\Source\\\\Repos\\\\SlugHub\\\\client\\\\src\\\\EventPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './EventPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventPage = () => {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const fetchEventById = async eventId => {\n    try {\n      const response = await fetch(`http://localhost:4000/event/${eventId}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          throw new Error('Event not found');\n        } else {\n          throw new Error(`Error: ${response.status} - ${response.statusText}`);\n        }\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching event:', error);\n      throw error;\n    }\n  };\n  useEffect(() => {\n    if (!eventId) {\n      setError('Invalid event ID');\n      setLoading(false);\n      return;\n    }\n    fetchEventById(eventId).then(data => {\n      setEvent(data);\n      setError('');\n    }).catch(error => {\n      setError(error.message || 'Failed to fetch event');\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [eventId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Event not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"eventPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftEventBox\",\n        children: [event.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"eventPageImage\",\n          src: event.photo,\n          alt: event.title || 'Event'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"eventTitle\",\n          children: event.title || 'Untitled Event'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"eventDescription\",\n          children: event.description || 'No description available.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightEventBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userProfile\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hosted by: User \", event.user_id || 'Unknown']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"eventDay\",\n          children: [\"Date: \", event.date || 'Not specified']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"eventTime\",\n          children: [\"Time: \", event.startTime || 'Not specified', \" - \", event.endTime || 'Not specified']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(EventPage, \"QCnB3Bobq0VovWjWtluDJgrsjB8=\", false, function () {\n  return [useParams];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","EventPage","_s","eventId","event","setEvent","loading","setLoading","error","setError","fetchEventById","response","fetch","ok","status","Error","statusText","data","json","console","then","catch","message","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","className","photo","src","alt","title","description","user_id","date","startTime","endTime","_c","$RefreshReg$"],"sources":["C:/Users/aubre/Source/Repos/SlugHub/client/src/EventPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './EventPage.css';\r\n\r\nconst EventPage = () => {\r\n    const { eventId } = useParams(); \r\n    const [event, setEvent] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const fetchEventById = async (eventId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:4000/event/${eventId}`);\r\n            \r\n            if (!response.ok) {\r\n                if (response.status === 404) {\r\n                    throw new Error('Event not found');\r\n                } else {\r\n                    throw new Error(`Error: ${response.status} - ${response.statusText}`);\r\n                }\r\n            }\r\n            \r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Error fetching event:', error);\r\n            throw error; \r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (!eventId) {\r\n            setError('Invalid event ID');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        fetchEventById(eventId)\r\n            .then(data => {\r\n                setEvent(data);\r\n                setError('');\r\n            })\r\n            .catch(error => {\r\n                setError(error.message || 'Failed to fetch event');\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [eventId]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    if (!event) {\r\n        return <div>Event not found.</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"eventPage\">\r\n            <div className=\"eventBox\">\r\n                <div className=\"leftEventBox\">\r\n                    {event.photo && (\r\n                        <img className='eventPageImage' src={event.photo} alt={event.title || 'Event'} />\r\n                    )}\r\n                    <h1 className='eventTitle'>{event.title || 'Untitled Event'}</h1>\r\n                    <p className='eventDescription'>{event.description || 'No description available.'}</p>\r\n                </div>\r\n                <div className=\"rightEventBox\">\r\n                    <div className='userProfile'>\r\n                        <p>Hosted by: User {event.user_id || 'Unknown'}</p>\r\n                    </div>\r\n                    <p className='eventDay'>Date: {event.date || 'Not specified'}</p>\r\n                    <p className='eventTime'>Time: {event.startTime || 'Not specified'} - {event.endTime || 'Not specified'}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,cAAc,GAAG,MAAOP,OAAO,IAAK;IACtC,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BT,OAAO,EAAE,CAAC;MAEtE,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE;QACd,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UACzB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;QACtC,CAAC,MAAM;UACH,MAAM,IAAIA,KAAK,CAAC,UAAUJ,QAAQ,CAACG,MAAM,MAAMH,QAAQ,CAACK,UAAU,EAAE,CAAC;QACzE;MACJ;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZW,OAAO,CAACX,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACf;EACJ,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZ,IAAI,CAACO,OAAO,EAAE;MACVM,QAAQ,CAAC,kBAAkB,CAAC;MAC5BF,UAAU,CAAC,KAAK,CAAC;MACjB;IACJ;IAEAG,cAAc,CAACP,OAAO,CAAC,CAClBiB,IAAI,CAACH,IAAI,IAAI;MACVZ,QAAQ,CAACY,IAAI,CAAC;MACdR,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,CACDY,KAAK,CAACb,KAAK,IAAI;MACZC,QAAQ,CAACD,KAAK,CAACc,OAAO,IAAI,uBAAuB,CAAC;IACtD,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACXhB,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,IAAIG,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAwB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIpB,KAAK,EAAE;IACP,oBAAOR,OAAA;MAAAwB,QAAA,GAAK,SAAO,EAAChB,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpC;EAEA,IAAI,CAACxB,KAAK,EAAE;IACR,oBAAOJ,OAAA;MAAAwB,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACI5B,OAAA;IAAK6B,SAAS,EAAC,WAAW;IAAAL,QAAA,eACtBxB,OAAA;MAAK6B,SAAS,EAAC,UAAU;MAAAL,QAAA,gBACrBxB,OAAA;QAAK6B,SAAS,EAAC,cAAc;QAAAL,QAAA,GACxBpB,KAAK,CAAC0B,KAAK,iBACR9B,OAAA;UAAK6B,SAAS,EAAC,gBAAgB;UAACE,GAAG,EAAE3B,KAAK,CAAC0B,KAAM;UAACE,GAAG,EAAE5B,KAAK,CAAC6B,KAAK,IAAI;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACnF,eACD5B,OAAA;UAAI6B,SAAS,EAAC,YAAY;UAAAL,QAAA,EAAEpB,KAAK,CAAC6B,KAAK,IAAI;QAAgB;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjE5B,OAAA;UAAG6B,SAAS,EAAC,kBAAkB;UAAAL,QAAA,EAAEpB,KAAK,CAAC8B,WAAW,IAAI;QAA2B;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eACN5B,OAAA;QAAK6B,SAAS,EAAC,eAAe;QAAAL,QAAA,gBAC1BxB,OAAA;UAAK6B,SAAS,EAAC,aAAa;UAAAL,QAAA,eACxBxB,OAAA;YAAAwB,QAAA,GAAG,kBAAgB,EAACpB,KAAK,CAAC+B,OAAO,IAAI,SAAS;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACN5B,OAAA;UAAG6B,SAAS,EAAC,UAAU;UAAAL,QAAA,GAAC,QAAM,EAACpB,KAAK,CAACgC,IAAI,IAAI,eAAe;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjE5B,OAAA;UAAG6B,SAAS,EAAC,WAAW;UAAAL,QAAA,GAAC,QAAM,EAACpB,KAAK,CAACiC,SAAS,IAAI,eAAe,EAAC,KAAG,EAACjC,KAAK,CAACkC,OAAO,IAAI,eAAe;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3G,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA9EID,SAAS;EAAA,QACSH,SAAS;AAAA;AAAAyC,EAAA,GAD3BtC,SAAS;AAgFf,eAAeA,SAAS;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}