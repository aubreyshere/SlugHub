{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aubre\\\\Source\\\\Repos\\\\SlugHub\\\\client\\\\src\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Homepage.css';\nimport reportWebVitals from './reportWebVitals';\nimport SearchBar from './searchBar';\nimport EventPreview from './EventPreview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n\n  // Fetch event data from the database\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch('/api/events'); // Replace with your API endpoint\n        const data = await response.json();\n        setEvents(data);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recommended\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n_s(Homepage, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = Homepage;\nreportWebVitals();\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","reportWebVitals","SearchBar","EventPreview","jsxDEV","_jsxDEV","Homepage","_s","events","setEvents","useState","useEffect","fetchEvents","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aubre/Source/Repos/SlugHub/client/src/Homepage.js"],"sourcesContent":["import React from 'react';\r\nimport './Homepage.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport SearchBar from './searchBar';\r\nimport EventPreview from './EventPreview';\r\n\r\nconst Homepage = () => {\r\n    const [events, setEvents] = useState([]);\r\n\r\n    // Fetch event data from the database\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            try {\r\n                const response = await fetch('/api/events'); // Replace with your API endpoint\r\n                const data = await response.json();\r\n                setEvents(data);\r\n            } catch (error) {\r\n                console.error('Error fetching events:', error);\r\n            }\r\n        };\r\n\r\n        fetchEvents();\r\n    }, []);\r\n    return (\r\n        <div>\r\n                <div>\r\n                    <SearchBar />\r\n                    <h1>Recommended</h1>\r\n                    \r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nexport default Homepage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,SAAS,CAACM,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IAEDL,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIP,OAAA;IAAAc,QAAA,eACQd,OAAA;MAAAc,QAAA,gBACId,OAAA,CAACH,SAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACblB,OAAA;QAAAc,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;;AAGD;AACA;AACA;AAAAhB,EAAA,CA/BMD,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAgCdL,eAAe,CAAC,CAAC;AACjB,eAAeK,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}